apply plugin: 'com.android.application'
apply from: 'dist.gradle'


//pluginExt {
//    applicationId APPLICATION_ID
//    jiGuangExt {
//        JGQQShareKey =  "\"${QQKey}\""
//        JGWxShareKey =  "\"${WxKey}\""
//        JGQQShareSecret =  "\"${QQSecret}\""
//        JGWxShareSecret =  "\"${WxSecret}\""
//    }
//    uMengExt {
//        UMengKey =  "\"${config.UMengKey}\"" //必填 test
//        UMengSecret =  "\"${config.UMengSecret}\""   //必填
//
//    }
//}


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {

        minSdkVersion 19
        targetSdkVersion 29
        applicationId APPLICATION_ID
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "color", "common_main_color", MAIN_COLOR
        resValue "color", "common_main_bg", MAIN_BG_COLOR
        def name = APP_NAME
        println("name---->" + name)
        resValue "string", "public_app_name", APP_NAME

    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    //这个是维度的意思
    flavorDimensions "channel"
    productFlavors {
        //这个是默认渠道 根据首字母默认取的所以
        aDebug {
            buildConfigField "String", "BASE_URL", "\"${baseurl.api}\""
            buildConfigField "String", "BASE_H5_URL", "\"${baseurl.h5}\""
            dimension "channel"

        }

        wxTest {
            buildConfigField "String", "BASE_URL", "\"${BASE_URL_API_TEST}\""
            buildConfigField "String", "BASE_H5_URL", "\"${BASE_URL_H5_TEST}\""
            dimension "channel"

        }
        wxDemo {
            buildConfigField "String", "BASE_URL", "\"${BASE_URL_API_DEMO}\""
            buildConfigField "String", "BASE_H5_URL", "\"${BASE_URL_H5_DEMO}\""
            dimension "channel"
        }
        wxRelease {
            buildConfigField "String", "BASE_URL", "\"${BASE_URL_API_RELEASE}\""
            buildConfigField "String", "BASE_H5_URL", "\"${BASE_URL_H5_RELEASE}\""
            dimension "channel"

        }
    }

    def build_apk_flavors = ""
    build_apk_flavors += FLAVORS_DEMO.toBoolean() ? "wxDemo" : ""
    build_apk_flavors += FLAVORS_TEST.toBoolean() ? "wxTest" : ""
    build_apk_flavors += FLAVORS_RELEASE.toBoolean() ? "wxRelease" : ""
    println("build_apk_flavors-->"+build_apk_flavors)
    variantFilter { variant ->
        def flavor_name = variant.flavors*.name[0]
        //names [wxTest]
        println(flavor_name)
        if (build_apk_flavors.contains(flavor_name)) {
            setIgnore(false)
        } else {
            setIgnore(true)
        }

    }

    productFlavors.all {
        flavor ->
            buildConfigField "String", "CHANNEL_ID", "\"${name}\""
            manifestPlaceholders = [CHANNEL_ID: "${name}"]
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
